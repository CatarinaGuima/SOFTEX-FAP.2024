1. Defina o que é uma variável na programação.
    Um dado é dito uma variável quando este pode sofrer alterações durante a execução do algoritmo.A variável armazena temporariamente os dados que são usados pelo software. “Todo dado armazenado na memória de um computador deve ser previamente identificado segundo seu tipo”. “Variáveis são espaços em memória que servem para guardar um tipo de dado ou informação. Esses espaços em memória devem receber nomes específicos e únicos, para que possam ser referenciados exclusivamente e usados sempre que necessário”.

2. Escreva com as suas palavras a diferença entre as declarações const, let e var e como elas podem
ser aplicadas na prática.
    São tipos diferentes de variáveis que possuem funções distintas. A Constante(const) É uma posição na memória do computador, que o valor não se altera durante a execução do programa. "let" têm escopo de bloco, o que significa que são visíveis apenas dentro do bloco em que foram declaradas, também é uma variável que recebe atribuição ao ser inicializada no código e que possui a opção de mudar o seu valor/conteúdo ao decorrer de todo o desenvolvimento do projeto. "var" tem a mesma definição/função da "let", É a forma mais antiga de declarar variáveis no JavaScript. As variáveis declaradas com var têm escopo de função ou escopo global, o que significa que são visíveis dentro da função em que foram declaradas ou em todo o programa, se forem declaradas fora de qualquer função, mas está em desuso por levar a comportamentos inesperados em alguns casos.

3. Explique a diferença entre as variáveis do tipo objeto e lista.  
    As variáveis do tipo objeto e lista são conceitos diferentes, relacionados ao tipo de dado que podem armazenar e como funcionam internamente. Um objeto é uma coleção de pares chave-valor onde os valores podem ser de qualquer tipo de dado (números, strings, booleanos, funções, outros objetos, etc.). As chaves (ou propriedades) são strings ou símbolos que identificam exclusivamente cada valor no objeto. Objetos são frequentemente usados para representar estruturas de dados complexas, como informações de usuário, configurações de aplicativos, entre outros.